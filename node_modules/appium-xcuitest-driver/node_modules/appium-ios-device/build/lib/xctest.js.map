{"version":3,"file":"xctest.js","names":["_services","require","_instrument","_headers","_nskeyed","_testmanagerd","_support","_utilities","_logger","_interopRequireDefault","_bluebird","DAEMON_CONNECTION_INTERFACE","TESTMANAGERD_CHANNEL","XCTEST_CONFIGURATION_EXTENSION","TMP_FOLDER_PREFIX","XCTEST_EXECUTABLE_SUFFIX","MAJOR_IOS_VERSION_9","MAJOR_IOS_VERSION_11","MAJOR_IOS_VERSION_12","XCODE_BUILD_PATH","XCODE_VERSION","MAGIC_CHANNEL","Xctest","constructor","udid","xctestBundleId","targetBundleId","opts","running","_executing","_conf","conf","_env","env","_launchAppRunner","majorVersion","sessionIdentifier","PROCESS_CONTROL","INSTRUMENT_CHANNEL","installation","startInstallationProxyService","lookupResult","lookupApplications","bundleIds","close","appInfo","Error","signerIdentifier","SignerIdentity","log","info","appContainer","Container","execName","CFBundleExecutable","endsWith","targetName","substr","indexOf","xctestPath","toUpperCase","xctestConfiguration","XCTestConfiguration","testBundleURL","Path","targetApplicationBundleID","_writeConfigurationToDevice","_instrumentService","startInstrumentService","registerLifecycleCallback","stop","bind","callChannel","appPath","xctestConfigurationPath","appEnv","CA_ASSERT_MAIN_THREAD_TRANSACTIONS","CA_DEBUG_TRANSACTIONS","DYLD_FRAMEWORK_PATH","DYLD_LIBRARY_PATH","NSUnbufferedIO","SQLITE_ENABLE_THREAD_ASSERTIONS","WDA_PRODUCT_BUNDLE_IDENTIFIER","XCTestConfigurationFilePath","XCODE_DBG_XPC_EXCLUSIONS","MJPEG_SERVER_PORT","USE_PORT","LLVM_PROFILE_FILE","DYLD_INSERT_LIBRARIES","OS_ACTIVITY_DT_MODE","appArgs","appOptions","StartSuspendedKey","ActivateSuspended","launchResult","pid","selector","msg","DTXMessageAuxBuffer","appendObject","xctestContent","getBytes","houseArrestService","startHouseArrestService","vendContainer","stream","list","listDirectory","file","fullPath","debug","deleteDirectory","createWriteStream","B","resolve","reject","write","on","_stream","_vendContainer","end","_startInitialSession","_initialControlSession","startTestmanagerdService","_startExecSession","_execTestPlanSession","startExecuting","_callChannel","showLogMessage","message","auxiliaries","join","includes","setTimeout","registerSelectorCallback","NSUUID","_notifyTestProcessId","start","targetMessage","productVersion","getOSVersion","parseInt","split","util","uuidV4","e","_this$_instrumentServ","_this$_instrumentServ2","_this$_execTestPlanSe","_this$_execTestPlanSe2","_this$_initialControl","_this$_initialControl2","dispose","undefined","exports","_default","default"],"sources":["../../lib/xctest.js"],"sourcesContent":["import { startHouseArrestService, startTestmanagerdService, startInstallationProxyService, startInstrumentService } from './services';\nimport { INSTRUMENT_CHANNEL } from './instrument';\nimport { DTXMessageAuxBuffer } from './instrument/headers';\nimport { NSUUID, XCTestConfiguration } from './instrument/transformer/nskeyed';\nimport { TESTMANAGERD_CHANNEL } from './testmanagerd';\nimport { util } from '@appium/support';\nimport { getOSVersion } from './utilities';\nimport log from './logger';\nimport B from 'bluebird';\n\nconst { DAEMON_CONNECTION_INTERFACE } = TESTMANAGERD_CHANNEL;\nconst XCTEST_CONFIGURATION_EXTENSION = '.xctestconfiguration';\nconst TMP_FOLDER_PREFIX = '/tmp';\nconst XCTEST_EXECUTABLE_SUFFIX = '-Runner';\nconst MAJOR_IOS_VERSION_9 = 9;\nconst MAJOR_IOS_VERSION_11 = 11;\nconst MAJOR_IOS_VERSION_12 = 12;\n//This is not related with which xcode user installed but only a marker to use inside device\nconst XCODE_BUILD_PATH = '/Applications/Xcode.app/Contents/Developer/usr/bin/xcodebuild';\nconst XCODE_VERSION = 29;\nconst MAGIC_CHANNEL = 0xFFFFFFFF;\n/**\n * @typedef {Object} XCTestConfigurationProperties\n * @property {string?} productModuleName\n * @property {string[]?} targetApplicationArguments\n * @property {string[]?} testsToRun\n * @property {string[]?} testsToSkip\n */\n\n/**\n * @typedef {Object} XctestOption\n * @property {XCTestConfigurationProperties} conf properties to override in XCTestConfiguration\n * @property {object} env key-value pairs to append in xctest app environment\n */\n\n/**\n * Allows invoking pre-installed xctest app from iOS devices. No Xcode installation is required.\n * This class simulates the procedure which xcode uses to invoke xctests.\n */\nclass Xctest {\n\n    /**\n     * @param {string} udid Device udid.\n     * @param {string} xctestBundleId Bundle Id of xctest app on device. The app must be installed on device.\n     * @param {string?} targetBundleId test target bundle id.\n     * @param {XctestOption?} opts addition options to specific XCTestConfiguration and app launch env\n     */\n    constructor(udid, xctestBundleId, targetBundleId = null, opts = {}) {\n        this.udid = udid;\n        this.running = false;\n        this._executing = false;\n        this.xctestBundleId = xctestBundleId;\n        this.targetBundleId = targetBundleId;\n        this._conf = opts?.conf || {};\n        this._env = opts?.env || {};\n    }\n\n    /**\n     * @param {number} majorVersion first part of iOS version 9/10/11/12/13/14/15/16\n     * @param {string} sessionIdentifier uuid with format: 00000000-0000-0000-0000-000000000000\n     */\n    async _launchAppRunner(majorVersion, sessionIdentifier) {\n        const { PROCESS_CONTROL } = INSTRUMENT_CHANNEL;\n        const installation = await startInstallationProxyService(this.udid);\n        let lookupResult;\n        try {\n            lookupResult = await installation.lookupApplications({ bundleIds: [this.xctestBundleId] });\n        } finally {\n            installation.close();\n        }\n        const appInfo = lookupResult[this.xctestBundleId];\n        if (!appInfo) {\n            throw new Error(`${this.xctestBundleId} not found on device ${this.udid}`);\n        }\n        const signerIdentifier = appInfo.SignerIdentity;\n        log.info(`SignerIdentifier: ${signerIdentifier}`);\n        const appContainer = appInfo.Container;\n        const execName = appInfo.CFBundleExecutable;\n        if (!execName.endsWith(XCTEST_EXECUTABLE_SUFFIX)) {\n            throw new Error(`Invalid CFBundleExecutable ${execName} from ${this.xctestBundleId}, is this bundle a valid xctest app?`);\n        }\n        const targetName = execName.substr(0, execName.indexOf(XCTEST_EXECUTABLE_SUFFIX));\n        const xctestPath = `${TMP_FOLDER_PREFIX}/${targetName}-${sessionIdentifier.toUpperCase()}${XCTEST_CONFIGURATION_EXTENSION}`;\n        const xctestConfiguration = new XCTestConfiguration({\n            ...this._conf,\n            // properties below should not be override\n            testBundleURL: `file://${appInfo.Path}/PlugIns/${targetName}.xctest`,\n            sessionIdentifier,\n            targetApplicationBundleID: this.targetBundleId,\n        });\n        await this._writeConfigurationToDevice(xctestConfiguration, xctestPath);\n        this._instrumentService = await startInstrumentService(this.udid);\n        this._instrumentService.registerLifecycleCallback('close', this.stop.bind(this));\n        await this._instrumentService.callChannel(PROCESS_CONTROL, 'processIdentifierForBundleIdentifier:', this.xctestBundleId);\n        const appPath = appInfo.Path;\n        const xctestConfigurationPath = appContainer + xctestPath;\n        const appEnv = {\n            CA_ASSERT_MAIN_THREAD_TRANSACTIONS: '0',\n            CA_DEBUG_TRANSACTIONS: '0',\n            DYLD_FRAMEWORK_PATH: `${appPath}/Frameworks:`,\n            DYLD_LIBRARY_PATH: `${appPath}/Frameworks`,\n            NSUnbufferedIO: 'YES',\n            SQLITE_ENABLE_THREAD_ASSERTIONS: '1',\n            WDA_PRODUCT_BUNDLE_IDENTIFIER: '',\n            XCTestConfigurationFilePath: xctestConfigurationPath,\n            XCODE_DBG_XPC_EXCLUSIONS: 'com.apple.dt.xctestSymbolicator',\n            MJPEG_SERVER_PORT: '',\n            USE_PORT: '',\n            // %p means pid\n            LLVM_PROFILE_FILE: `${appContainer}/tmp/%p.profraw`,\n            ...this._env\n        };\n        if (majorVersion >= MAJOR_IOS_VERSION_11) {\n            appEnv.DYLD_INSERT_LIBRARIES = '/Developer/usr/lib/libMainThreadChecker.dylib';\n            appEnv.OS_ACTIVITY_DT_MODE = 'YES';\n        }\n        const appArgs = [\n            '-NSTreatUnknownArgumentsAsOpen', 'NO',\n            '-ApplePersistenceIgnoreState', 'YES'\n        ];\n        const appOptions = { StartSuspendedKey: false };\n        if (majorVersion >= MAJOR_IOS_VERSION_12) {\n            appOptions.ActivateSuspended = true;\n        }\n        const launchResult = await this._instrumentService.callChannel(PROCESS_CONTROL,\n            'launchSuspendedProcessWithDevicePath:bundleIdentifier:environment:arguments:options:',\n            appPath, this.xctestBundleId, appEnv, appArgs, appOptions);\n        const pid = launchResult.selector;\n        if (typeof pid !== 'number') {\n            throw Error(`Failed on launching ${this.xctestBundleId}: ${launchResult}`);\n        }\n        log.info(`Pid of launched ${this.xctestBundleId}: ${pid}`);\n        const msg = new DTXMessageAuxBuffer();\n        msg.appendObject(pid);\n        await this._instrumentService.callChannel(PROCESS_CONTROL, 'startObservingPid:', msg);\n        return pid;\n    }\n\n    /**\n     * @param {XCTestConfiguration} xctestConfiguration plist contains\n     * @param {string} xctestPath where xctestConfiguration should be place in app sandbox.\n     */\n    async _writeConfigurationToDevice(xctestConfiguration, xctestPath) {\n        const xctestContent = xctestConfiguration.getBytes();\n        const houseArrestService = await startHouseArrestService(this.udid);\n        let vendContainer;\n        let stream;\n        try {\n            vendContainer = await houseArrestService.vendContainer(this.xctestBundleId);\n            const list = await vendContainer.listDirectory(TMP_FOLDER_PREFIX);\n            for (const file of list) {\n                if (file.endsWith(XCTEST_CONFIGURATION_EXTENSION)) {\n                    const fullPath = `${TMP_FOLDER_PREFIX}/${file}`;\n                    log.debug(`removing ${fullPath}`);\n                    await vendContainer.deleteDirectory(fullPath);\n                }\n            }\n            stream = await vendContainer.createWriteStream(xctestPath, {});\n            await new B((resolve, reject) => {\n                stream.write(xctestContent, resolve);\n                stream.on('error', reject);\n            });\n        } finally {\n            stream?.end();\n            vendContainer?.close();\n            houseArrestService.close();\n        }\n    }\n\n    async _startInitialSession(majorVersion) {\n        this._initialControlSession = await startTestmanagerdService(this.udid);\n        this._initialControlSession.registerLifecycleCallback('close', this.stop.bind(this));\n        if (majorVersion < MAJOR_IOS_VERSION_11) {\n            return;\n        }\n        const msg = new DTXMessageAuxBuffer();\n        msg.appendObject(XCODE_VERSION);\n        await this._initialControlSession.callChannel(DAEMON_CONNECTION_INTERFACE,\n            '_IDE_initiateControlSessionWithProtocolVersion:', msg);\n    }\n\n    async _startExecSession(sessionIdentifier) {\n        this._execTestPlanSession = await startTestmanagerdService(this.udid);\n        this._execTestPlanSession.registerLifecycleCallback('close', this.stop.bind(this));\n        const startExecuting = () => {\n            if (this._executing) {\n                return;\n            }\n            this._executing = true;\n            const msg = new DTXMessageAuxBuffer();\n            msg.appendObject(XCODE_VERSION);\n            this._execTestPlanSession._callChannel(false, MAGIC_CHANNEL, '_IDE_startExecutingTestPlanWithProtocolVersion:', msg);\n        };\n        const showLogMessage = (message) => {\n            if (message.auxiliaries.join('').includes('Received test runner ready reply with error: (null')) {\n                log.info('Test runner ready');\n                //A magic thing is that if not using a delay this would fail on iPhone7 iOS 13.6.1\n                setTimeout(() => startExecuting(), 1000);\n            }\n        };\n        this._execTestPlanSession.registerSelectorCallback('_XCT_testBundleReadyWithProtocolVersion:minimumVersion:', startExecuting);\n        this._execTestPlanSession.registerSelectorCallback('_XCT_logDebugMessage:', showLogMessage);\n        const msg = new DTXMessageAuxBuffer();\n        msg.appendObject(new NSUUID(sessionIdentifier));\n        msg.appendObject(`${sessionIdentifier}-746F-006D726964646C79`);\n        msg.appendObject(XCODE_BUILD_PATH);\n        msg.appendObject(XCODE_VERSION);\n        await this._execTestPlanSession.callChannel(DAEMON_CONNECTION_INTERFACE,\n            '_IDE_initiateSessionWithIdentifier:forClient:atPath:protocolVersion:', msg);\n    }\n\n    async _notifyTestProcessId(pid, majorVersion) {\n        const msg = new DTXMessageAuxBuffer();\n        msg.appendObject(pid);\n        if (majorVersion >= MAJOR_IOS_VERSION_12) {\n            return await this._initialControlSession.callChannel(DAEMON_CONNECTION_INTERFACE,\n                '_IDE_authorizeTestSessionWithProcessID:', msg);\n        }\n        if (majorVersion <= MAJOR_IOS_VERSION_9) {\n            return await this._initialControlSession.callChannel(DAEMON_CONNECTION_INTERFACE,\n                '_IDE_initiateControlSessionForTestProcessID:', msg);\n        }\n        msg.appendObject(XCODE_VERSION);\n        return await this._initialControlSession.callChannel(DAEMON_CONNECTION_INTERFACE,\n            '_IDE_initiateControlSessionForTestProcessID:protocolVersion:', msg);\n    }\n\n    /**\n     * Start xctest process. If this method has been called before and the `stop()` method has not been called,\n     * calling this again would return directly.\n     * @throws If xctest bundle id invalid or not installed.\n     */\n    async start() {\n        if (this.running) {\n            const targetMessage = this.targetBundleId ? `(targeting ${this.targetBundleId})` : '';\n            const message = `Xctest for ${this.xctestBundleId}${targetMessage} on device ${this.udid} is already running!`;\n            log.info(`${message} Doing nothing here`);\n            return;\n        }\n        this.running = true;\n        try {\n            const productVersion = await getOSVersion(this.udid);\n            const majorVersion = parseInt(productVersion.split('.')[0], 10);\n            const sessionIdentifier = util.uuidV4();\n            //first connection\n            await this._startInitialSession(majorVersion);\n\n            //second connection\n            await this._startExecSession(sessionIdentifier);\n\n            const pid = await this._launchAppRunner(majorVersion, sessionIdentifier);\n            await this._notifyTestProcessId(pid, majorVersion);\n        } catch (e) {\n            this.stop();\n            throw e;\n        }\n    }\n\n    /**\n     * Stop xctest process.\n     */\n    stop() {\n        if (!this.running) {\n            // not started or already called `stop()`\n            return;\n        }\n        this.running = false;\n        this._instrumentService?.close();\n        this._instrumentService?.dispose();\n        this._instrumentService = undefined;\n        this._execTestPlanSession?.close();\n        this._execTestPlanSession?.dispose();\n        this._execTestPlanSession = undefined;\n        this._initialControlSession?.close();\n        this._initialControlSession?.dispose();\n        this._initialControlSession = undefined;\n        this._executing = false;\n        const targetMessage = this.targetBundleId ? `(targeting ${this.targetBundleId})` : '';\n        const message = `Xctest for ${this.xctestBundleId}${targetMessage} on device ${this.udid} has stopped!`;\n        log.debug(message);\n    }\n}\n\nexport { Xctest };\nexport default Xctest;\n"],"mappings":"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"}