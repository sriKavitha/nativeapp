{"version":3,"file":"nskeyed.js","names":["_bplistParser","_interopRequireDefault","require","_bplistCreator","_uuid","_lodash","NSKEYED_ARCHIVE_VERSION","NULL_UID","plistlib","UID","CYCLE_TOKEN","PRIMITIVE_TYPES","NON_ENCODABLE_TYPES","NSKEYEDARCHIVER","UNIX2APPLE_TIMESTAMP_SECOND","FORMAT_VERSION","NS_OBJECT","ArchivedObject","constructor","object","unarchiver","_unarchiver","decodeIndex","index","decodeObject","decode","key","decodeKey","ArchivingObject","archiver","_archiveObj","_archiver","encode","val","BaseArchiveHandler","additionClasses","decodeArchive","archive","Error","encodeArchive","obj","exports","DictArchive","keyUids","valUids","d","i","length","ListArchive","uids","map","bind","DTTapMessagePlist","NSError","$class","domain","userinfo","code","NSException","reason","name","NSURL","base","relative","_base","_relative","NSDate","data","_data","NSMutableString","NSMutableData","NSUUID","uuidStringify","Buffer","from","uuidParse","buffer","XCTCapabilities","NSIgnore","NSNull","XCTestConfiguration","_default","aggregateStatisticsBeforeCrash","XCSuiteRecordsKey","automationFrameworkPath","baselineFileRelativePath","undefined","baselineFileURL","defaultTestExecutionTimeAllowance","disablePerformanceMetrics","emitOSLogs","formatVersion","gatherLocalizableStringsData","initializeForUITesting","maximumTestExecutionTimeAllowance","productModuleName","randomExecutionOrderingSeed","reportActivities","reportResultsToIDE","systemAttachmentLifetime","targetApplicationArguments","targetApplicationBundleID","targetApplicationEnvironment","targetApplicationPath","testApplicationDependencies","testApplicationUserOverrides","testBundleRelativePath","testExecutionOrdering","testTimeoutsEnabled","testsDrivenByIDE","testsMustRunOnMainThread","testsToRun","testsToSkip","treatMissingBaselinesAsFailures","userAttachmentLifetime","testBundleURL","TypeError","sessionIdentifier","getBytes","XCActivityRecord","_keys","reduce","acc","UNARCHIVE_CLASS_MAP","DTSysmonTapMessage","DTTapHeartbeatMessage","DTTapMessageArchive","DTKTraceTapMessage","ErrorArchive","ExceptionArchive","NSDictionary","NSMutableDictionary","NSArray","NSMutableArray","NSMutableSet","NSSet","Unarchive","inputBytes","input","unpackedUids","topUID","objects","unpackArchiveHeader","plist","parseBuffer","$archiver","$version","top","$top","root","JSON","stringify","$objects","classForUid","meta","$classname","klass","_","isNil","isUndefined","rawObj","klassObj","toObject","Archive","inputObject","uidForArchiver","addition","push","$classes","isNull","includes","archiveObj","encodeTopLevel","Array","encodeArray","Set","encodeSet","encodeXCTestConfiguration","Object","objName","encodeDict","objs","keys","values","entries","forEach","value","toBytes","bplistCreate","unarchive","updateNSKeyedArchiveClass","subClass","_subClass$prototype","_subClass$prototype2","isFunction","prototype"],"sources":["../../../../lib/instrument/transformer/nskeyed.js"],"sourcesContent":["import plistlib from 'bplist-parser';\nimport bplistCreate from 'bplist-creator';\nimport { parse as uuidParse, stringify as uuidStringify } from 'uuid';\nimport _ from 'lodash';\n\nconst NSKEYED_ARCHIVE_VERSION = 100_000;\nconst NULL_UID = new plistlib.UID(0);\nconst CYCLE_TOKEN = 'CycleToken';\nconst PRIMITIVE_TYPES = ['Number', 'String', 'Boolean', 'UID', 'Buffer'];\nconst NON_ENCODABLE_TYPES = ['number', 'boolean'];\nconst NSKEYEDARCHIVER = 'NSKeyedArchiver';\nconst UNIX2APPLE_TIMESTAMP_SECOND = 978307200;\nconst FORMAT_VERSION = 'formatVersion';\nconst NS_OBJECT = 'NSObject';\n\n\nclass ArchivedObject {\n  /**\n   * Stateful wrapper around Archive for an object being archived.\n   * @param {Object} object\n   * @param {Unarchive} unarchiver\n   * @constructor\n   */\n  constructor(object, unarchiver) {\n    this.object = object;\n    this._unarchiver = unarchiver;\n  }\n\n  decodeIndex(index) {\n    return this._unarchiver.decodeObject(index);\n  }\n\n  decode(key) {\n    return this._unarchiver.decodeKey(this.object, key);\n  }\n}\n\nclass ArchivingObject {\n  /**\n   * Stateful wrapper around Unarchive for an archived object\n   * @param {Object} object\n   * @param {Archive} archiver\n   * @constructor\n   */\n  constructor(object, archiver) {\n    this._archiveObj = object;\n    this._archiver = archiver;\n  }\n\n  encode(key, val) {\n    this._archiveObj[key] = this._archiver.encode(val);\n  }\n}\n\n/**\n * This class must be inherited when creating an archive/unarchive subclass\n * And you need to call `updateNSKeyedArchiveClass` add subclass to archive/unarchive object\n */\nclass BaseArchiveHandler {\n  /**\n   * some of the classes may have to add 'NSObject' or maybe more in $classes while encoding.\n   */\n  additionClasses = [];\n  /**\n   * @param {ArchivedObject} archive\n   */\n  // eslint-disable-next-line no-unused-vars\n  decodeArchive(archive) {\n    throw new Error(`Did not know how to decode the object`);\n  }\n\n  /**\n   * @param {Object} obj  an instance of this class\n   * @param {ArchivingObject} archive\n   */\n  // eslint-disable-next-line no-unused-vars\n  encodeArchive(obj, archive) {\n    throw new Error(`Did not know how to encode the object`);\n  }\n}\n\n/**\n * \"Delegate for packing/unpacking NS(Mutable)Dictionary objects\"\n */\nclass DictArchive extends BaseArchiveHandler {\n  decodeArchive(archive) {\n    const keyUids = archive.decode('NS.keys');\n    const valUids = archive.decode('NS.objects');\n    const d = {};\n    for (let i = 0; i < keyUids.length; i++) {\n      const key = archive.decodeIndex(keyUids[i]);\n      d[key] = archive.decodeIndex(valUids[i]);\n    }\n    return d;\n  }\n}\n\n/**\n * Delegate for packing/unpacking NS(Mutable)Array objects\n */\nclass ListArchive extends BaseArchiveHandler {\n  decodeArchive(archive) {\n    const uids = archive.decode('NS.objects');\n    return uids.map(archive.decodeIndex.bind(archive));\n  }\n}\n\nclass DTTapMessagePlist extends BaseArchiveHandler {\n  decodeArchive(archive) {\n    return archive.decode('DTTapMessagePlist');\n  }\n}\n\nclass NSError extends BaseArchiveHandler {\n  decodeArchive(archive) {\n    return {\n      $class: 'NSError',\n      domain: archive.decode('NSDomain'),\n      userinfo: archive.decode('NSUserInfo'),\n      code: archive.decode('NSCode')\n    };\n  }\n}\n\nclass NSException extends BaseArchiveHandler {\n  decodeArchive(archive) {\n    return {\n      $class: 'NSException',\n      reason: archive.decode('NS.reason'),\n      userinfo: archive.decode('userinfo'),\n      name: archive.decode('NS.name')\n    };\n  }\n}\n\nclass NSURL extends BaseArchiveHandler {\n  /**\n   * @param {*} base\n   * @param {string} relative usually ios device relative path e.g: file://xx/\n   */\n  constructor(base, relative) {\n    super();\n    this._base = base;\n    this._relative = relative;\n    this.additionClasses = [NS_OBJECT];\n  }\n\n  decodeArchive(archive) {\n    return { $class: 'NSURL', base: archive.decode('NS.base'), relative: archive.decode('NS.relative') };\n  }\n\n  encodeArchive(obj, archive) {\n    archive.encode('NS.base', obj._base);\n    archive.encode('NS.relative', obj._relative);\n  }\n}\n\nclass NSDate extends BaseArchiveHandler {\n  /**\n   * @param {number} data timestamp in seconds\n   */\n  constructor(data) {\n    super();\n    this._data = data;\n  }\n\n  decodeArchive(archive) {\n    return UNIX2APPLE_TIMESTAMP_SECOND + archive.decode('NS.time');\n  }\n\n  encodeArchive(obj, archive) {\n    archive.encode('NS.time', obj._data - UNIX2APPLE_TIMESTAMP_SECOND);\n  }\n}\n\nclass NSMutableString extends BaseArchiveHandler {\n  decodeArchive(archive) {\n    return archive.decode('NS.string');\n  }\n}\n\nclass NSMutableData extends BaseArchiveHandler {\n  decodeArchive(archive) {\n    return archive.decode('NS.data');\n  }\n}\n\nclass NSUUID extends BaseArchiveHandler {\n  /**\n   * @param {string} data uuid format data e.g:00000000-0000-0000-0000-000000000000\n   */\n  constructor(data) {\n    super();\n    this._data = data;\n    this.additionClasses = [NS_OBJECT];\n  }\n\n  decodeArchive(archive) {\n    return uuidStringify(archive.decode('NS.uuidbytes'));\n  }\n\n  encodeArchive(obj, archive) {\n    archive._archiveObj['NS.uuidbytes'] = Buffer.from(uuidParse(obj._data).buffer);\n  }\n}\n\nclass XCTCapabilities extends BaseArchiveHandler {\n  decodeArchive(archive) {\n    return archive.decode('capabilities-dictionary');\n  }\n}\n\n/**\n * Some of the plist classes may not be included and should not be cared.\n * Using this as a default decoder for unknown entities to avoid interrupting decode process.\n */\nclass NSIgnore extends BaseArchiveHandler {\n  decodeArchive() {\n    return null;\n  }\n}\n\nclass NSNull extends BaseArchiveHandler {\n  constructor() {\n    super();\n    this.additionClasses = [NS_OBJECT];\n  }\n  decodeArchive() {\n    return null;\n  }\n}\n\n/**\n * @typedef {Object} XCTestConfigurationPlist\n * @property {string | NSURL} testBundleURL\n * @property {string | NSUUID} sessionIdentifier\n * @property {string?} productModuleName\n * @property {string?} targetApplicationBundleID\n * @property {string[]?} targetApplicationArguments\n * @property {string[]?} testsToRun\n * @property {string[]?} testsToSkip\n */\nclass XCTestConfiguration extends BaseArchiveHandler {\n  static _default = {\n    aggregateStatisticsBeforeCrash: {\n      XCSuiteRecordsKey: {}\n    },\n    automationFrameworkPath: '/Developer/Library/PrivateFrameworks/XCTAutomationSupport.framework',\n    baselineFileRelativePath: undefined,\n    baselineFileURL: undefined,\n    defaultTestExecutionTimeAllowance: undefined,\n    disablePerformanceMetrics: false,\n    emitOSLogs: false,\n    formatVersion: 2,\n    gatherLocalizableStringsData: false,\n    initializeForUITesting: true,\n    maximumTestExecutionTimeAllowance: undefined,\n    productModuleName: 'WebDriverAgentRunner',\n    randomExecutionOrderingSeed: undefined,\n    reportActivities: true,\n    reportResultsToIDE: true,\n    systemAttachmentLifetime: 2,\n    targetApplicationArguments: [],\n    targetApplicationBundleID: undefined,\n    targetApplicationEnvironment: undefined,\n    targetApplicationPath: '/KEEP-THIS-NOT-EMPTY/KEEP-THIS-NOT-EMPTY',\n    testApplicationDependencies: {},\n    testApplicationUserOverrides: undefined,\n    testBundleRelativePath: undefined,\n    testExecutionOrdering: 0,\n    testTimeoutsEnabled: false,\n    testsDrivenByIDE: false,\n    testsMustRunOnMainThread: true,\n    testsToRun: undefined,\n    testsToSkip: undefined,\n    treatMissingBaselinesAsFailures: false,\n    userAttachmentLifetime: 1\n  }\n\n  /**\n   * @param {XCTestConfigurationPlist} data\n   */\n  constructor(data) {\n    super();\n    if (!data.testBundleURL) {\n      throw new TypeError('testBundleURL cannot be empty');\n    }\n    if (!data.sessionIdentifier) {\n      throw new TypeError('sessionIdentifier cannot be empty');\n    }\n    if (typeof data.testBundleURL === 'string') {\n      data.testBundleURL = new NSURL(undefined, data.testBundleURL);\n    }\n    if (!(data.testBundleURL instanceof NSURL)) {\n      throw new TypeError(`Expected testBundleURL to be a valid NSURL instance, got ${data.testBundleURL.constructor.name} instead`);\n    }\n    if (typeof data.sessionIdentifier === 'string') {\n      data.sessionIdentifier = new NSUUID(data.sessionIdentifier);\n    }\n    if (!(data.sessionIdentifier instanceof NSUUID)) {\n      throw new TypeError(`Expected sessionIdentifier to be a valid NSUUID instance, got ${data.sessionIdentifier.constructor.name} instead`);\n    }\n    this._data = { ...XCTestConfiguration._default, ...data };\n  }\n\n  getBytes() {\n    return archive(this);\n  }\n}\n\nclass XCActivityRecord extends BaseArchiveHandler {\n  static _keys = ['activityType', 'attachments', 'finish', 'start', 'title', 'uuid'];\n  decodeArchive(archive) {\n    return XCActivityRecord._keys.reduce((acc, key) => {\n      acc[key] = archive.decode(key);\n      return acc;\n    }, {});\n  }\n}\n\n/**\n * decode and encode Archive of currently known data formats\n */\nconst UNARCHIVE_CLASS_MAP = {\n  DTTapMessagePlist,\n  DTSysmonTapMessage: DTTapMessagePlist,\n  DTTapHeartbeatMessage: DTTapMessagePlist,\n  DTTapMessageArchive: DTTapMessagePlist,\n  DTKTraceTapMessage: DTTapMessagePlist,\n  ErrorArchive: NSError,\n  ExceptionArchive: NSException,\n  NSDictionary: DictArchive,\n  NSMutableDictionary: DictArchive,\n  NSArray: ListArchive,\n  NSMutableArray: ListArchive,\n  NSMutableSet: ListArchive,\n  NSSet: ListArchive,\n  NSDate,\n  NSError,\n  NSException,\n  NSMutableString,\n  NSMutableData,\n  NSNull,\n  NSUUID,\n  NSURL,\n  XCActivityRecord,\n  XCTCapabilities,\n  XCTestConfiguration,\n};\n\n/**\n * Capable of unpacking an archived object tree in the NSKeyedArchive format.\n * Apple's implementation can be found here:\n * https://github.com/apple/swift-corelibs-foundation/blob/main/Sources/Foundation/NSKeyedUnarchiver.swift\n */\nclass Unarchive {\n  constructor(inputBytes) {\n    this.input = inputBytes;\n    this.unpackedUids = {};\n    this.topUID = NULL_UID;\n    this.objects = [];\n  }\n\n  unpackArchiveHeader() {\n    const plist = plistlib.parseBuffer(this.input)[0];\n    if (plist.$archiver !== NSKEYEDARCHIVER) {\n      throw new Error(`unsupported encoder: ${plist.$archiver}`);\n    }\n    if (plist.$version !== NSKEYED_ARCHIVE_VERSION) {\n      throw new Error(`expected ${NSKEYED_ARCHIVE_VERSION}, got ${plist.$version}`);\n    }\n    const top = plist.$top;\n    const topUID = top.root;\n    if (!topUID) {\n      throw new Error(`top object did not have a UID! dump: ${JSON.stringify(top)}`);\n    }\n    this.topUID = topUID;\n    this.objects = plist.$objects;\n  }\n\n  /**\n   * use the UNARCHIVE_CLASS_MAP to find the unarchiving delegate of a uid\n   */\n  classForUid(index) {\n    const meta = this.objects[index.UID];\n    const name = meta.$classname;\n    const klass = UNARCHIVE_CLASS_MAP[name] ?? NSIgnore;\n    return klass;\n  }\n\n  decodeKey(obj, key) {\n    const val = obj[key];\n    return _.isNil(val?.UID) ? val : this.decodeObject(val);\n  }\n\n  decodeObject(index) {\n    if (index === NULL_UID) {\n      return null;\n    }\n    const obj = this.unpackedUids[index];\n    if (obj === CYCLE_TOKEN) {\n      throw new Error(`archive has a cycle with ${index}`);\n    }\n    if (!_.isUndefined(obj)) {\n      return obj;\n    }\n    const rawObj = this.objects[index.UID];\n    this.unpackedUids[index.UID] = CYCLE_TOKEN;\n\n    if (!rawObj?.$class) {\n      this.unpackedUids[index.UID] = obj;\n      return rawObj;\n    }\n    const klass = this.classForUid(rawObj.$class);\n    const klassObj = new klass().decodeArchive(new ArchivedObject(rawObj, this));\n    this.unpackedUids[index.UID] = klassObj;\n    return klassObj;\n  }\n\n  toObject() {\n    this.unpackArchiveHeader();\n    return this.decodeObject(this.topUID);\n  }\n}\n\n/**\n * Capable of packing an object tree into the NSKeyedArchive format.\n * Apple's implementation can be found here:\n * https://github.com/apple/swift-corelibs-foundation/blob/main/Sources/Foundation/NSKeyedArchiver.swift\n */\nclass Archive {\n  constructor(inputObject) {\n    this.input = inputObject;\n    this.objects = ['$null']; // objects that go directly into the archive, always start with $null\n  }\n\n  uidForArchiver(archiver, ...addition) {\n    const val = new plistlib.UID(this.objects.length);\n    this.objects.push({\n      $classes: [archiver, ...addition],\n      $classname: archiver\n    });\n    return val;\n  }\n\n  archive(obj) {\n    if (_.isUndefined(obj) || _.isNull(obj)) {\n      return NULL_UID;\n    }\n    const index = new plistlib.UID(this.objects.length);\n    if (PRIMITIVE_TYPES.includes(obj.constructor.name)) {\n      this.objects.push(obj);\n      return index;\n    }\n    const archiveObj = {};\n    this.objects.push(archiveObj);\n    this.encodeTopLevel(obj, archiveObj);\n    return index;\n  }\n\n  encode(val) {\n    if (NON_ENCODABLE_TYPES.includes(typeof val)) {\n      return val;\n    }\n    return this.archive(val);\n  }\n\n  encodeTopLevel(obj, archiveObj) {\n    if (obj instanceof Array) {\n      return this.encodeArray(obj, archiveObj);\n    } else if (obj instanceof Set) {\n      return this.encodeSet(obj, archiveObj);\n    } else if (obj instanceof XCTestConfiguration) {\n      return this.encodeXCTestConfiguration(obj, archiveObj);\n    } else if (obj instanceof Object) {\n      const objName = obj.constructor.name;\n      // Only special class instance are useful, such as NSURL, NSUUID, NSDate.\n      // And this class must also have the encodeArchive method\n      if (objName in UNARCHIVE_CLASS_MAP) {\n        obj.encodeArchive(obj, new ArchivingObject(archiveObj, this));\n        archiveObj.$class = this.uidForArchiver(objName, ...(obj.additionClasses ?? []));\n      } else {\n        return this.encodeDict(obj, archiveObj);\n      }\n    } else {\n      throw Error(`Unable to encode types: ${typeof obj}`);\n    }\n  }\n\n  encodeArray(objs, archiveObj) {\n    archiveObj.$class = this.uidForArchiver('NSArray', NS_OBJECT);\n    archiveObj['NS.objects'] = objs.map(this.archive.bind(this));\n  }\n\n  encodeSet(objs, archiveObj) {\n    archiveObj.$class = this.uidForArchiver('NSSet', NS_OBJECT);\n    archiveObj['NS.objects'] = objs.map(this.archive.bind(this));\n  }\n\n  encodeDict(obj, archiveObj) {\n    archiveObj['NS.keys'] = _.keys(obj).map(this.archive.bind(this));\n    archiveObj['NS.objects'] = _.values(obj).map(this.archive.bind(this));\n    //dict has to make classes after value\n    archiveObj.$class = this.uidForArchiver('NSDictionary', NS_OBJECT);\n  }\n\n  /**\n   *\n   * @param {XCTestConfiguration} obj\n   * @param {*} archiveObj\n   */\n  encodeXCTestConfiguration(obj, archiveObj) {\n    archiveObj.$class = this.uidForArchiver('XCTestConfiguration', NS_OBJECT);\n    _.entries(obj._data).forEach(([key, value]) => archiveObj[key] = (key === FORMAT_VERSION) ? this.archive(value) : this.encode(value));\n  }\n\n  toBytes() {\n    if (this.objects.length === 1) {\n      this.archive(this.input);\n    }\n    const d = {\n      $version: NSKEYED_ARCHIVE_VERSION,\n      $archiver: NSKEYEDARCHIVER,\n      $top: { root: new plistlib.UID(1) },\n      $objects: this.objects\n    };\n    return bplistCreate(d);\n  }\n}\n\n/**\n * Creates NSKeyed Buffer from an object\n * @param {Object} inputObject\n * @returns {Buffer} NSKeyed Buffer\n */\nfunction archive(inputObject) {\n  return new Archive(inputObject).toBytes();\n}\n\n/**\n * Parses NSKeyed Buffer into JS Object\n * @param {Buffer} inputBytes NSKeyed Buffer\n * @returns {Object} JS Object\n */\nfunction unarchive(inputBytes) {\n  return new Unarchive(inputBytes).toObject();\n}\n\n/**\n * Update unknown NSKeyedArchive types for packing/unpacking\n * @param {String} name packing/unpacking key name\n * @param {BaseArchiveHandler} subClass inherit from BaseArchiveHandler class\n */\nfunction updateNSKeyedArchiveClass(name, subClass) {\n  if (!_.isFunction(subClass.prototype?.decodeArchive) && !_.isFunction(subClass.prototype?.encodeArchive)) {\n    throw Error('subClass must have decodeArchive or encodeArchive methods');\n  }\n  if (!(name in UNARCHIVE_CLASS_MAP)) {\n    UNARCHIVE_CLASS_MAP[name] = subClass;\n  }\n}\n\nexport { updateNSKeyedArchiveClass, BaseArchiveHandler, NSURL, NSUUID, NSDate, XCTestConfiguration, unarchive, archive };\n"],"mappings":"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"}