{"version":3,"file":"index.js","names":["_baseService","require","_headers","_dtxEncode","_dtxDecode","_events","_interopRequireDefault","_lodash","_asyncbox","CHECK_FREQ_MS","WAIT_REPLY_TIME_MS","CHANNEL_CANCELED","CHANNEL_OFFSET","INSTRUMENT_SERVICE_NAME_VERSION_14","exports","INSTRUMENT_SERVICE_NAME","INSTRUMENT_CHANNEL","Object","freeze","DEVICE_INFO","PROCESS_CONTROL","SYSMONTAP","NETWORKING","MOBILE_NOTIFICATIONS","GRAPHICS_OPENGL","APPLICATION_LISTING","CONDITION_INDUCER","defaultDict","createValue","Proxy","revocable","create","get","storage","property","InstrumentService","BaseServiceSocket","constructor","socketClient","event","_undefinedCallback","_callbacks","events","EventEmitter","_channelCallbacks","proxy","revoke","_replyQueues","_replyQueuesRevoker","_channels","_nextIdentifier","_encoder","DTXEncoder","pipe","_socketClient","_assignClientFailureHandlers","_decoder","DTXDecoder","on","_handleData","bind","registerSelectorCallback","selector","addListener","registerUndefinedCallback","registerChannelCallback","channel","channelId","makeChannel","registerLifecycleCallback","eventName","channelCode","keys","length","_callChannel","callChannel","auxiliaries","sync","identifier","write","DTXMessageAuxBuffer","waitForCondition","queue","data","shift","_","isUndefined","waitMs","intervalMs","error","err","close","Error","includes","conversationIndex","push","listenerCount","emit","isString","expectsReply","_replyAck","reply","DTXMessage","flags","FLAG_TYPES","build","dispose","unpipe","removeAllListeners"],"sources":["../../../lib/instrument/index.js"],"sourcesContent":["// Adapted from https://github.com/YueChen-C/py-ios-device\n\nimport { BaseServiceSocket } from '../base-service';\nimport { DTXMessage, DTXMessageAuxBuffer, FLAG_TYPES } from './headers';\nimport { DTXEncoder } from './transformer/dtx-encode';\nimport { DTXDecoder } from './transformer/dtx-decode';\nimport events from 'events';\nimport _ from 'lodash';\nimport { waitForCondition } from 'asyncbox';\n\nconst CHECK_FREQ_MS = 500;\nconst WAIT_REPLY_TIME_MS = 10000;\nconst CHANNEL_CANCELED = '_channelCanceled';\nconst CHANNEL_OFFSET = 2 ** 32;\n\nconst INSTRUMENT_SERVICE_NAME_VERSION_14 = 'com.apple.instruments.remoteserver.DVTSecureSocketProxy';\nconst INSTRUMENT_SERVICE_NAME = 'com.apple.instruments.remoteserver';\n\nexport const INSTRUMENT_CHANNEL = Object.freeze({\n  DEVICE_INFO: 'com.apple.instruments.server.services.deviceinfo',\n  PROCESS_CONTROL: 'com.apple.instruments.server.services.processcontrol',\n  SYSMONTAP: 'com.apple.instruments.server.services.sysmontap',\n  NETWORKING: 'com.apple.instruments.server.services.networking',\n  MOBILE_NOTIFICATIONS: 'com.apple.instruments.server.services.mobilenotifications',\n  GRAPHICS_OPENGL: 'com.apple.instruments.server.services.graphics.opengl',\n  APPLICATION_LISTING: 'com.apple.instruments.server.services.device.applictionListing',\n  CONDITION_INDUCER: 'com.apple.instruments.server.services.ConditionInducer'\n});\n\nfunction defaultDict(createValue) {\n  return Proxy.revocable(Object.create(null), {\n    get(storage, property) {\n      if (!(property in storage)) {\n        storage[property] = createValue(property);\n      }\n      return storage[property];\n    }\n  });\n}\n\n/** The callback function which will be called during the data transmission in instrument serve\n * @callback DTXCallback\n * @param {DTXMessage} object\n*/\n\nclass InstrumentService extends BaseServiceSocket {\n  /**\n   * @param {import('net').Socket} socketClient  DTXMessage.selector\n   * @param {DTXCallback?} event if empty will ignore any messages\n   */\n  constructor(socketClient, event) {\n    super(socketClient);\n    this._undefinedCallback = event;\n    this._callbacks = new events.EventEmitter();\n    this._channelCallbacks = new events.EventEmitter();\n    const { proxy, revoke } = defaultDict(() => []);\n    this._replyQueues = proxy;\n    this._replyQueuesRevoker = revoke;\n    this._channels = {};\n    this._nextIdentifier = 1;\n    this._encoder = new DTXEncoder();\n    this._encoder.pipe(this._socketClient);\n    this._assignClientFailureHandlers(this._encoder);\n    this._decoder = new DTXDecoder();\n    this._socketClient.pipe(this._decoder);\n    this._decoder.on('data', this._handleData.bind(this));\n  }\n\n  /**\n   * If the selector is registered, The message of the selector event will be returned. refer to this._handleData\n   * @param {string} selector  Listen for return DTXMessage.selector data\n   * @param {DTXCallback} event\n   */\n  registerSelectorCallback(selector, event) {\n    this._callbacks.addListener(selector, event);\n  }\n\n  /**\n   * If the event is registered, all unregistered messages will be returned to event. refer to this._handleData\n   * @param {DTXCallback} event\n   */\n  registerUndefinedCallback(event) {\n    this._undefinedCallback = event;\n  }\n\n  /**\n   * If the event is registered, this channel {CHANNEL} messages will be returned to event. refer to this._handleData\n   * It's actually listening for int channelCode. In this._channel object to record channel key and int value\n   * @param {string} channel instruments service channel e.g: INSTRUMENT_CHANNEL.DEVICE_INFO.\n   * @param {DTXCallback} event\n   */\n  async registerChannelCallback(channel, event) {\n    const channelId = await this.makeChannel(channel);\n    this._channelCallbacks.addListener(channelId, event);\n  }\n\n  /**\n   * Event will be registered to socket client lifecycle\n   * @param {string} eventName\n   * @param {(message: any | null) => void} event\n   */\n  registerLifecycleCallback(eventName, event) {\n    this._socketClient.on(eventName, event);\n  }\n\n  /**\n   * Create a service channel, data transmission of the service will use this channelCode\n   * @param {string} channel  instruments service channel e.g: INSTRUMENT_CHANNEL.DEVICE_INFO\n   * @returns {Promise<number|*>} instruments service channel code for data transmission\n   */\n  async makeChannel(channel) {\n    if (channel in this._channels) {\n      return this._channels[channel];\n    }\n    const channelCode = Object.keys(this._channels).length + 1;\n    await this._callChannel(true, 0, '_requestChannelWithCode:identifier:', channelCode, channel);\n    this._channels[channel] = channelCode;\n    return channelCode;\n  }\n\n  /**\n   * In general, we call this method to start the instrument dtx service\n   * @param {string} channel instrument dtx service e.g: INSTRUMENT_CHANNEL.DEVICE_INFO\n   * @param {string} selector instrument service method name (reflection calls)\n   * @param {...any | DTXMessageAuxBuffer} auxiliaries parameters required by selector. If auxiliaries are passed in using\n   * the DTXMessageAuxBuffer type, all the variables should be manually assembled into only one DTXMessageAuxBuffer instance.\n   * @returns {Promise<DTXMessage>}\n   * exampleï¼š\n   * instrumentService.callChannel(INSTRUMENT_CHANNEL.PROCESS_CONTROL,\n        'launchSuspendedProcessWithDevicePath:bundleIdentifier:environment:arguments:options:', '',\n        bundleID, {}, [], {'StartSuspendedKey': 0, 'KillExisting': 1}\n   */\n  async callChannel(channel, selector, ...auxiliaries) {\n    const channelCode = await this.makeChannel(channel);\n    return await this._callChannel(true, channelCode, selector, ...auxiliaries);\n  }\n\n  async _callChannel(sync, channelCode, selector, ...auxiliaries) {\n    const identifier = this._nextIdentifier;\n    this._encoder.write({\n      sync,\n      channelCode,\n      selector,\n      auxiliaries: (auxiliaries.length === 1 && auxiliaries[0] instanceof DTXMessageAuxBuffer) ? auxiliaries[0] : auxiliaries,\n      identifier\n    });\n    ++this._nextIdentifier;\n    if (sync) {\n      try {\n        return await waitForCondition(() => {\n          const queue = this._replyQueues[identifier];\n          const data = queue.shift();\n          if (!_.isUndefined(data)) {\n            return data;\n          }\n        }, { waitMs: WAIT_REPLY_TIME_MS, intervalMs: CHECK_FREQ_MS, error: 'reply channel data timeout' });\n      } catch (err) {\n        this.close();\n        throw new Error(err);\n      }\n    }\n  }\n\n  /**\n   * Handling registered asynchronous message callbacks\n   * @param {DTXMessage} data\n   * @private\n   */\n  _handleData(data) {\n    if (_.includes(data.selector, CHANNEL_CANCELED)) {\n      this.close();\n    }\n    if (data.conversationIndex === 1) {\n      this._replyQueues[data.identifier].push(data);\n    } else if (this._channelCallbacks.listenerCount(CHANNEL_OFFSET - data.channelCode) > 0) {\n      this._channelCallbacks.emit(CHANNEL_OFFSET - data.channelCode, data);\n    } else {\n      const selector = data.selector;\n      if (_.isString(selector) && this._callbacks.listenerCount(selector) > 0) {\n        this._callbacks.emit(selector, data);\n      } else if (this._undefinedCallback) {\n        this._undefinedCallback(data);\n      }\n      if (data.expectsReply) {\n        this._replyAck(data);\n      }\n    }\n  }\n\n  /**\n   * return a empty ack message\n   * @param {DTXMessage} data\n   */\n  _replyAck(data) {\n    const reply = new DTXMessage({\n      identifier: data.identifier,\n      channelCode: data.channelCode,\n      conversationIndex: data.conversationIndex + 1,\n      flags: FLAG_TYPES.reply\n    });\n    this._socketClient.write(reply.build());\n  }\n\n  dispose() {\n    this._encoder.unpipe();\n    this._decoder.removeAllListeners();\n    this._callbacks.removeAllListeners();\n    this._channelCallbacks.removeAllListeners();\n    this._socketClient.removeAllListeners();\n    this._socketClient.unpipe();\n    this._replyQueuesRevoker();\n  }\n}\n\nexport { InstrumentService, INSTRUMENT_SERVICE_NAME_VERSION_14, INSTRUMENT_SERVICE_NAME };\n"],"mappings":"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"}