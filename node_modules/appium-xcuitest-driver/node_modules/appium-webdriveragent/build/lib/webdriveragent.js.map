{"version":3,"file":"webdriveragent.js","names":["_lodash","_interopRequireDefault","require","_path","_url2","_bluebird","_baseDriver","_support","_logger","_noSessionProxy","_utils","_xcodebuild","_asyncLock","_teen_process","_checkDependencies","_constants","_appiumIosDevice","WDA_LAUNCH_TIMEOUT","WDA_AGENT_PORT","WDA_CF_BUNDLE_NAME","SHARED_RESOURCES_GUARD","AsyncLock","WebDriverAgent","constructor","xcodeVersion","args","log","_","clone","defaultLogger","device","platformVersion","platformName","iosSdkVersion","host","isRealDevice","realDevice","idb","wdaBundlePath","setWDAPaths","bootstrapPath","agentPath","wdaLocalPort","wdaRemotePort","wdaBaseUrl","WDA_BASE_URL","prebuildWDA","webDriverAgentUrl","started","wdaConnectionTimeout","useXctestrunFile","usePrebuiltWDA","derivedDataPath","mjpegServerPort","updatedWDABundleId","usePreinstalledWDA","xctestApiClient","xcodebuild","canSkipXcodebuild","XcodeBuild","showXcodeLog","xcodeConfigFile","xcodeOrgId","xcodeSigningId","keychainPath","keychainPassword","useSimpleBuildTest","launchTimeout","wdaLaunchTimeout","allowProvisioningDeviceRegistration","resultBundlePath","resultBundleVersion","bundleIdForXctest","WDA_RUNNER_BUNDLE_ID_FOR_XCTEST","BOOTSTRAP_PATH","info","path","resolve","cleanupObsoleteProcesses","obsoletePids","getPIDsListeningOnPort","url","port","cmdLine","includes","toLowerCase","udid","isEmpty","debug","length","exec","e","warn","message","isRunning","getStatus","basePath","noSessionProxy","NoSessionProxy","server","hostname","base","timeout","command","err","href","uninstall","bundleIds","getUserInstalledBundleIdsByBundleName","bundleId","removeApp","_cleanupProjectIfFresh","homeFolder","process","env","HOME","currentUpgradeTimestamp","getWDAUpgradeTimestamp","isInteger","timestampPath","WDA_UPGRADE_TIMESTAMP_PATH","didTimestampExist","fs","exists","access","W_OK","ign","recentUpgradeTimestamp","parseInt","readFile","mkdirp","dirname","writeFile","cleanProject","launchWithPreinstalledWDA","sessionId","xctestEnv","USE_PORT","WDA_PRODUCT_BUNDLE_IDENTIFIER","MJPEG_SERVER_PORT","Xctest","start","setupProxies","status","launch","Error","synchronizationKey","normalize","acquire","resetTestProcesses","startWithIDB","init","prebuild","wdaBundleId","testBundleId","prepareWDA","runXCUITest","parseBundleId","infoPlistPath","join","infoPlist","plist","parsePlist","CFBundleIdentifier","fetchWDABundle","isAppInstalled","installApp","installXCTestBundle","bundleWDASim","wdaBundlePaths","glob","WDA_RUNNER_APP","absolute","isSourceFresh","existsPromises","sep","map","subPath","B","all","some","v","proxyOpts","keepAlive","jwproxy","JWProxy","proxyReqRes","bind","quit","stop","reset","_url","parse","protocol","fullyStarted","retrieveDerivedDataPath","setupCaching","build","productBundleIdentifier","upgradedAt","util","hasValue","WDA_RUNNER_BUNDLE_ID","actualUpgradeTimestamp","toLower","quitAndUninstall","exports","_default","default"],"sources":["../../lib/webdriveragent.js"],"sourcesContent":["import _ from 'lodash';\nimport path from 'path';\nimport url from 'url';\nimport B from 'bluebird';\nimport { JWProxy } from '@appium/base-driver';\nimport { fs, util, plist, mkdirp } from '@appium/support';\nimport defaultLogger from './logger';\nimport { NoSessionProxy } from './no-session-proxy';\nimport {\n  getWDAUpgradeTimestamp, resetTestProcesses, getPIDsListeningOnPort, BOOTSTRAP_PATH\n} from './utils';\nimport XcodeBuild from './xcodebuild';\nimport AsyncLock from 'async-lock';\nimport { exec } from 'teen_process';\nimport { bundleWDASim } from './check-dependencies';\nimport {\n  WDA_RUNNER_BUNDLE_ID, WDA_RUNNER_BUNDLE_ID_FOR_XCTEST, WDA_RUNNER_APP,\n  WDA_BASE_URL, WDA_UPGRADE_TIMESTAMP_PATH,\n} from './constants';\nimport {Xctest} from 'appium-ios-device';\n\nconst WDA_LAUNCH_TIMEOUT = 60 * 1000;\nconst WDA_AGENT_PORT = 8100;\nconst WDA_CF_BUNDLE_NAME = 'WebDriverAgentRunner-Runner';\nconst SHARED_RESOURCES_GUARD = new AsyncLock();\n\nclass WebDriverAgent {\n  constructor (xcodeVersion, args = {}, log = null) {\n    this.xcodeVersion = xcodeVersion;\n\n    this.args = _.clone(args);\n    this.log = log ?? defaultLogger;\n\n    this.device = args.device;\n    this.platformVersion = args.platformVersion;\n    this.platformName = args.platformName;\n    this.iosSdkVersion = args.iosSdkVersion;\n    this.host = args.host;\n    this.isRealDevice = !!args.realDevice;\n    this.idb = (args.device || {}).idb;\n    this.wdaBundlePath = args.wdaBundlePath;\n\n    this.setWDAPaths(args.bootstrapPath, args.agentPath);\n\n    this.wdaLocalPort = args.wdaLocalPort;\n    this.wdaRemotePort = args.wdaLocalPort || WDA_AGENT_PORT;\n    this.wdaBaseUrl = args.wdaBaseUrl || WDA_BASE_URL;\n\n    this.prebuildWDA = args.prebuildWDA;\n\n    // this.args.webDriverAgentUrl guiarantees the capabilities acually\n    // gave 'appium:webDriverAgentUrl' but 'this.webDriverAgentUrl'\n    // could be used for caching WDA with xcodebuild.\n    this.webDriverAgentUrl = args.webDriverAgentUrl;\n\n    this.started = false;\n\n    this.wdaConnectionTimeout = args.wdaConnectionTimeout;\n\n    this.useXctestrunFile = args.useXctestrunFile;\n    this.usePrebuiltWDA = args.usePrebuiltWDA;\n    this.derivedDataPath = args.derivedDataPath;\n    this.mjpegServerPort = args.mjpegServerPort;\n\n    this.updatedWDABundleId = args.updatedWDABundleId;\n\n    this.usePreinstalledWDA = args.usePreinstalledWDA;\n    this.xctestApiClient = null;\n\n    this.xcodebuild = this.canSkipXcodebuild\n    ? null\n    : new XcodeBuild(this.xcodeVersion, this.device, {\n        platformVersion: this.platformVersion,\n        platformName: this.platformName,\n        iosSdkVersion: this.iosSdkVersion,\n        agentPath: this.agentPath,\n        bootstrapPath: this.bootstrapPath,\n        realDevice: this.isRealDevice,\n        showXcodeLog: args.showXcodeLog,\n        xcodeConfigFile: args.xcodeConfigFile,\n        xcodeOrgId: args.xcodeOrgId,\n        xcodeSigningId: args.xcodeSigningId,\n        keychainPath: args.keychainPath,\n        keychainPassword: args.keychainPassword,\n        useSimpleBuildTest: args.useSimpleBuildTest,\n        usePrebuiltWDA: args.usePrebuiltWDA,\n        updatedWDABundleId: this.updatedWDABundleId,\n        launchTimeout: args.wdaLaunchTimeout || WDA_LAUNCH_TIMEOUT,\n        wdaRemotePort: this.wdaRemotePort,\n        useXctestrunFile: this.useXctestrunFile,\n        derivedDataPath: args.derivedDataPath,\n        mjpegServerPort: this.mjpegServerPort,\n        allowProvisioningDeviceRegistration: args.allowProvisioningDeviceRegistration,\n        resultBundlePath: args.resultBundlePath,\n        resultBundleVersion: args.resultBundleVersion,\n      }, this.log);\n  }\n\n  /**\n   * Return true if the session does not need xcodebuild.\n   * @returns {boolean} Whether the session needs/has xcodebuild.\n   */\n  get canSkipXcodebuild () {\n    // Use this.args.webDriverAgentUrl to guarantee\n    // the capabilities set gave the `appium:webDriverAgentUrl`.\n    return this.usePreinstalledWDA || this.args.webDriverAgentUrl;\n  }\n\n  /**\n   *\n   * @returns {string} Bundle ID for Xctest.\n   */\n  get bundleIdForXctest () {\n    return this.updatedWDABundleId ? `${this.updatedWDABundleId}.xctrunner` : WDA_RUNNER_BUNDLE_ID_FOR_XCTEST;\n  }\n\n  setWDAPaths (bootstrapPath, agentPath) {\n    // allow the user to specify a place for WDA. This is undocumented and\n    // only here for the purposes of testing development of WDA\n    this.bootstrapPath = bootstrapPath || BOOTSTRAP_PATH;\n    this.log.info(`Using WDA path: '${this.bootstrapPath}'`);\n\n    // for backward compatibility we need to be able to specify agentPath too\n    this.agentPath = agentPath || path.resolve(this.bootstrapPath, 'WebDriverAgent.xcodeproj');\n    this.log.info(`Using WDA agent: '${this.agentPath}'`);\n  }\n\n  async cleanupObsoleteProcesses () {\n    const obsoletePids = await getPIDsListeningOnPort(this.url.port,\n      (cmdLine) => cmdLine.includes('/WebDriverAgentRunner') &&\n        !cmdLine.toLowerCase().includes(this.device.udid.toLowerCase()));\n\n    if (_.isEmpty(obsoletePids)) {\n      this.log.debug(`No obsolete cached processes from previous WDA sessions ` +\n        `listening on port ${this.url.port} have been found`);\n      return;\n    }\n\n    this.log.info(`Detected ${obsoletePids.length} obsolete cached process${obsoletePids.length === 1 ? '' : 'es'} ` +\n      `from previous WDA sessions. Cleaning them up`);\n    try {\n      await exec('kill', obsoletePids);\n    } catch (e) {\n      this.log.warn(`Failed to kill obsolete cached process${obsoletePids.length === 1 ? '' : 'es'} '${obsoletePids}'. ` +\n        `Original error: ${e.message}`);\n    }\n  }\n\n  /**\n   * Return boolean if WDA is running or not\n   * @return {boolean} True if WDA is running\n   * @throws {Error} If there was invalid response code or body\n   */\n  async isRunning () {\n    return !!(await this.getStatus());\n  }\n\n  get basePath () {\n    if (this.url.path === '/') {\n      return '';\n    }\n    return this.url.path || '';\n  }\n\n  /**\n   * Return current running WDA's status like below\n   * {\n   *   \"state\": \"success\",\n   *   \"os\": {\n   *     \"name\": \"iOS\",\n   *     \"version\": \"11.4\",\n   *     \"sdkVersion\": \"11.3\"\n   *   },\n   *   \"ios\": {\n   *     \"simulatorVersion\": \"11.4\",\n   *     \"ip\": \"172.254.99.34\"\n   *   },\n   *   \"build\": {\n   *     \"time\": \"Jun 24 2018 17:08:21\",\n   *     \"productBundleIdentifier\": \"com.facebook.WebDriverAgentRunner\"\n   *   }\n   * }\n   *\n   * @return {?object} State Object\n   * @throws {Error} If there was invalid response code or body\n   */\n  async getStatus () {\n    const noSessionProxy = new NoSessionProxy({\n      server: this.url.hostname,\n      port: this.url.port,\n      base: this.basePath,\n      timeout: 3000,\n    });\n    try {\n      return await noSessionProxy.command('/status', 'GET');\n    } catch (err) {\n      this.log.debug(`WDA is not listening at '${this.url.href}'`);\n      return null;\n    }\n  }\n\n  /**\n   * Uninstall WDAs from the test device.\n   * Over Xcode 11, multiple WDA can be in the device since Xcode 11 generates different WDA.\n   * Appium does not expect multiple WDAs are running on a device.\n   */\n  async uninstall () {\n    try {\n      const bundleIds = await this.device.getUserInstalledBundleIdsByBundleName(WDA_CF_BUNDLE_NAME);\n      if (_.isEmpty(bundleIds)) {\n        this.log.debug('No WDAs on the device.');\n        return;\n      }\n\n      this.log.debug(`Uninstalling WDAs: '${bundleIds}'`);\n      for (const bundleId of bundleIds) {\n        await this.device.removeApp(bundleId);\n      }\n    } catch (e) {\n      this.log.debug(e);\n      this.log.warn(`WebDriverAgent uninstall failed. Perhaps, it is already uninstalled? ` +\n        `Original error: ${e.message}`);\n    }\n  }\n\n  async _cleanupProjectIfFresh () {\n    const homeFolder = process.env.HOME;\n    if (!homeFolder) {\n      this.log.info('The HOME folder path cannot be determined');\n      return;\n    }\n\n    const currentUpgradeTimestamp = await getWDAUpgradeTimestamp();\n    if (!_.isInteger(currentUpgradeTimestamp)) {\n      this.log.info('It is impossible to determine the timestamp of the package');\n      return;\n    }\n\n    const timestampPath = path.resolve(homeFolder, WDA_UPGRADE_TIMESTAMP_PATH);\n    const didTimestampExist = await fs.exists(timestampPath);\n    if (didTimestampExist) {\n      try {\n        await fs.access(timestampPath, fs.W_OK);\n      } catch (ign) {\n        this.log.info(`WebDriverAgent upgrade timestamp at '${timestampPath}' is not writeable. ` +\n          `Skipping sources cleanup`);\n        return;\n      }\n      const recentUpgradeTimestamp = parseInt(await fs.readFile(timestampPath, 'utf8'), 10);\n      if (_.isInteger(recentUpgradeTimestamp)) {\n        if (recentUpgradeTimestamp >= currentUpgradeTimestamp) {\n          this.log.info(`WebDriverAgent does not need a cleanup. The sources are up to date ` +\n            `(${recentUpgradeTimestamp} >= ${currentUpgradeTimestamp})`);\n          return;\n        }\n        this.log.info(`WebDriverAgent sources have been upgraded ` +\n          `(${recentUpgradeTimestamp} < ${currentUpgradeTimestamp})`);\n      } else {\n        this.log.warn(`The recent upgrade timestamp at '${timestampPath}' is corrupted. Trying to fix it`);\n      }\n    }\n\n    try {\n      await mkdirp(path.dirname(timestampPath));\n      await fs.writeFile(timestampPath, `${currentUpgradeTimestamp}`, 'utf8');\n      this.log.debug(`Stored the recent WebDriverAgent upgrade timestamp ${currentUpgradeTimestamp} ` +\n        `at '${timestampPath}'`);\n    } catch (e) {\n      this.log.info(`Unable to create the recent WebDriverAgent upgrade timestamp at '${timestampPath}'. ` +\n        `Original error: ${e.message}`);\n      return;\n    }\n\n    if (!didTimestampExist) {\n      this.log.info('There is no need to perform the project cleanup. A fresh install has been detected');\n      return;\n    }\n\n    if (this.canSkipXcodebuild) {\n      return;\n    }\n    try {\n      await this.xcodebuild.cleanProject();\n    } catch (e) {\n      this.log.warn(`Cannot perform WebDriverAgent project cleanup. Original error: ${e.message}`);\n    }\n  }\n\n  /**\n   * Launch WDA with preinstalled package without xcodebuild.\n   * @param {string} sessionId Launch WDA and establish the session with this sessionId\n   * @return {?object} State Object\n   */\n  async launchWithPreinstalledWDA(sessionId) {\n    const xctestEnv = {\n      USE_PORT: this.wdaLocalPort || WDA_AGENT_PORT,\n      WDA_PRODUCT_BUNDLE_IDENTIFIER: this.bundleIdForXctest\n    };\n    if (this.mjpegServerPort) {\n      xctestEnv.MJPEG_SERVER_PORT = this.mjpegServerPort;\n    }\n    this.log.info('Launching WebDriverAgent on the device without xcodebuild');\n    this.xctestApiClient = new Xctest(this.device.udid, this.bundleIdForXctest, null, {env: xctestEnv});\n\n    await this.xctestApiClient.start();\n\n    this.setupProxies(sessionId);\n    const status = await this.getStatus();\n    this.started = true;\n    return status;\n  }\n\n  /**\n   * Return current running WDA's status like below after launching WDA\n   * {\n   *   \"state\": \"success\",\n   *   \"os\": {\n   *     \"name\": \"iOS\",\n   *     \"version\": \"11.4\",\n   *     \"sdkVersion\": \"11.3\"\n   *   },\n   *   \"ios\": {\n   *     \"simulatorVersion\": \"11.4\",\n   *     \"ip\": \"172.254.99.34\"\n   *   },\n   *   \"build\": {\n   *     \"time\": \"Jun 24 2018 17:08:21\",\n   *     \"productBundleIdentifier\": \"com.facebook.WebDriverAgentRunner\"\n   *   }\n   * }\n   *\n   * @param {string} sessionId Launch WDA and establish the session with this sessionId\n   * @return {?object} State Object\n   * @throws {Error} If there was invalid response code or body\n   */\n  async launch (sessionId) {\n    if (this.webDriverAgentUrl) {\n      this.log.info(`Using provided WebdriverAgent at '${this.webDriverAgentUrl}'`);\n      this.url = this.webDriverAgentUrl;\n      this.setupProxies(sessionId);\n      return await this.getStatus();\n    }\n\n    if (this.usePreinstalledWDA) {\n      if (this.isRealDevice) {\n        return await this.launchWithPreinstalledWDA(sessionId);\n      }\n      throw new Error('usePreinstalledWDA is available only for a real device.');\n    }\n\n    this.log.info('Launching WebDriverAgent on the device');\n\n    this.setupProxies(sessionId);\n\n    if (!this.useXctestrunFile && !await fs.exists(this.agentPath)) {\n      throw new Error(`Trying to use WebDriverAgent project at '${this.agentPath}' but the ` +\n                      'file does not exist');\n    }\n\n    // useXctestrunFile and usePrebuiltWDA use existing dependencies\n    // It depends on user side\n    if (this.idb || this.useXctestrunFile || (this.derivedDataPath && this.usePrebuiltWDA)) {\n      this.log.info('Skipped WDA project cleanup according to the provided capabilities');\n    } else {\n      const synchronizationKey = path.normalize(this.bootstrapPath);\n      await SHARED_RESOURCES_GUARD.acquire(synchronizationKey,\n        async () => await this._cleanupProjectIfFresh());\n    }\n\n    // We need to provide WDA local port, because it might be occupied\n    await resetTestProcesses(this.device.udid, !this.isRealDevice);\n\n    if (this.idb) {\n      return await this.startWithIDB();\n    }\n\n    await this.xcodebuild.init(this.noSessionProxy);\n\n    // Start the xcodebuild process\n    if (this.prebuildWDA) {\n      await this.xcodebuild.prebuild();\n    }\n    return await this.xcodebuild.start();\n  }\n\n  async startWithIDB () {\n    this.log.info('Will launch WDA with idb instead of xcodebuild since the corresponding flag is enabled');\n    const {wdaBundleId, testBundleId} = await this.prepareWDA();\n    const env = {\n      USE_PORT: this.wdaRemotePort,\n      WDA_PRODUCT_BUNDLE_IDENTIFIER: this.updatedWDABundleId,\n    };\n    if (this.mjpegServerPort) {\n      env.MJPEG_SERVER_PORT = this.mjpegServerPort;\n    }\n\n    return await this.idb.runXCUITest(wdaBundleId, wdaBundleId, testBundleId, {env});\n  }\n\n  async parseBundleId (wdaBundlePath) {\n    const infoPlistPath = path.join(wdaBundlePath, 'Info.plist');\n    const infoPlist = await plist.parsePlist(await fs.readFile(infoPlistPath));\n    if (!infoPlist.CFBundleIdentifier) {\n      throw new Error(`Could not find bundle id in '${infoPlistPath}'`);\n    }\n    return infoPlist.CFBundleIdentifier;\n  }\n\n  async prepareWDA () {\n    const wdaBundlePath = this.wdaBundlePath || await this.fetchWDABundle();\n    const wdaBundleId = await this.parseBundleId(wdaBundlePath);\n    if (!await this.device.isAppInstalled(wdaBundleId)) {\n      await this.device.installApp(wdaBundlePath);\n    }\n    const testBundleId = await this.idb.installXCTestBundle(path.join(wdaBundlePath, 'PlugIns', 'WebDriverAgentRunner.xctest'));\n    return {wdaBundleId, testBundleId, wdaBundlePath};\n  }\n\n  async fetchWDABundle () {\n    if (!this.derivedDataPath) {\n      return await bundleWDASim(this.xcodebuild);\n    }\n    const wdaBundlePaths = await fs.glob(`${this.derivedDataPath}/**/*${WDA_RUNNER_APP}/`, {\n      absolute: true,\n    });\n    if (_.isEmpty(wdaBundlePaths)) {\n      throw new Error(`Could not find the WDA bundle in '${this.derivedDataPath}'`);\n    }\n    return wdaBundlePaths[0];\n  }\n\n  async isSourceFresh () {\n    const existsPromises = [\n      'Resources',\n      `Resources${path.sep}WebDriverAgent.bundle`,\n    ].map((subPath) => fs.exists(path.resolve(this.bootstrapPath, subPath)));\n    return (await B.all(existsPromises)).some((v) => v === false);\n  }\n\n  setupProxies (sessionId) {\n    const proxyOpts = {\n      log: this.log,\n      server: this.url.hostname,\n      port: this.url.port,\n      base: this.basePath,\n      timeout: this.wdaConnectionTimeout,\n      keepAlive: true,\n    };\n\n    this.jwproxy = new JWProxy(proxyOpts);\n    this.jwproxy.sessionId = sessionId;\n    this.proxyReqRes = this.jwproxy.proxyReqRes.bind(this.jwproxy);\n\n    this.noSessionProxy = new NoSessionProxy(proxyOpts);\n  }\n\n  async quit () {\n    if (this.usePreinstalledWDA) {\n      if (this.xctestApiClient) {\n        this.log.info('Stopping the XCTest session');\n        this.xctestApiClient.stop();\n        this.xctestApiClient = null;\n      }\n    } else if (!this.args.webDriverAgentUrl) {\n      this.log.info('Shutting down sub-processes');\n      await this.xcodebuild.quit();\n      await this.xcodebuild.reset();\n    } else {\n      this.log.debug('Do not stop xcodebuild nor XCTest session ' +\n        'since the WDA session is managed by outside this driver.');\n    }\n\n    if (this.jwproxy) {\n      this.jwproxy.sessionId = null;\n    }\n\n    this.started = false;\n\n    if (!this.args.webDriverAgentUrl) {\n      // if we populated the url ourselves (during `setupCaching` call, for instance)\n      // then clean that up. If the url was supplied, we want to keep it\n      this.webDriverAgentUrl = null;\n    }\n  }\n\n  get url () {\n    if (!this._url) {\n      if (this.webDriverAgentUrl) {\n        this._url = url.parse(this.webDriverAgentUrl);\n      } else {\n        const port = this.wdaLocalPort || WDA_AGENT_PORT;\n        const {protocol, hostname} = url.parse(this.wdaBaseUrl || WDA_BASE_URL);\n        this._url = url.parse(`${protocol}//${hostname}:${port}`);\n      }\n    }\n    return this._url;\n  }\n\n  set url (_url) {\n    this._url = url.parse(_url);\n  }\n\n  get fullyStarted () {\n    return this.started;\n  }\n\n  set fullyStarted (started = false) {\n    this.started = started;\n  }\n\n  async retrieveDerivedDataPath () {\n    if (this.canSkipXcodebuild) {\n      return;\n    }\n    return await this.xcodebuild.retrieveDerivedDataPath();\n  }\n\n  /**\n   * Reuse running WDA if it has the same bundle id with updatedWDABundleId.\n   * Or reuse it if it has the default id without updatedWDABundleId.\n   * Uninstall it if the method faces an exception for the above situation.\n   *\n   * @param {string} updatedWDABundleId BundleId you'd like to use\n   */\n  async setupCaching () {\n    const status = await this.getStatus();\n    if (!status || !status.build) {\n      this.log.debug('WDA is currently not running. There is nothing to cache');\n      return;\n    }\n\n    const {\n      productBundleIdentifier,\n      upgradedAt,\n    } = status.build;\n    // for real device\n    if (util.hasValue(productBundleIdentifier) && util.hasValue(this.updatedWDABundleId) && this.updatedWDABundleId !== productBundleIdentifier) {\n      this.log.info(`Will uninstall running WDA since it has different bundle id. The actual value is '${productBundleIdentifier}'.`);\n      return await this.uninstall();\n    }\n    // for simulator\n    if (util.hasValue(productBundleIdentifier) && !util.hasValue(this.updatedWDABundleId) && WDA_RUNNER_BUNDLE_ID !== productBundleIdentifier) {\n      this.log.info(`Will uninstall running WDA since its bundle id is not equal to the default value ${WDA_RUNNER_BUNDLE_ID}`);\n      return await this.uninstall();\n    }\n\n    const actualUpgradeTimestamp = await getWDAUpgradeTimestamp();\n    this.log.debug(`Upgrade timestamp of the currently bundled WDA: ${actualUpgradeTimestamp}`);\n    this.log.debug(`Upgrade timestamp of the WDA on the device: ${upgradedAt}`);\n    if (actualUpgradeTimestamp && upgradedAt && _.toLower(`${actualUpgradeTimestamp}`) !== _.toLower(`${upgradedAt}`)) {\n      this.log.info('Will uninstall running WDA since it has different version in comparison to the one ' +\n        `which is bundled with appium-xcuitest-driver module (${actualUpgradeTimestamp} != ${upgradedAt})`);\n      return await this.uninstall();\n    }\n\n    const message = util.hasValue(productBundleIdentifier)\n      ? `Will reuse previously cached WDA instance at '${this.url.href}' with '${productBundleIdentifier}'`\n      : `Will reuse previously cached WDA instance at '${this.url.href}'`;\n    this.log.info(`${message}. Set the wdaLocalPort capability to a value different from ${this.url.port} if this is an undesired behavior.`);\n    this.webDriverAgentUrl = this.url.href;\n  }\n\n  /**\n   * Quit and uninstall running WDA.\n   */\n  async quitAndUninstall () {\n    await this.quit();\n    await this.uninstall();\n  }\n}\n\nexport default WebDriverAgent;\nexport { WebDriverAgent };\n"],"mappings":"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"}