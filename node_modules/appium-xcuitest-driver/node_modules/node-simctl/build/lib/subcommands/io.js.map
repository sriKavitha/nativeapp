{"version":3,"file":"io.js","names":["_rimraf","require","_uuid","_path","_interopRequireDefault","_os","_promises","commands","getScreenshot","udid","requireUdid","pathToScreenshotPng","path","resolve","os","tmpdir","uuidV4","exec","args","fs","readFile","toString","rimraf","_default","exports","default"],"sources":["../../../lib/subcommands/io.js"],"sourcesContent":["import { rimraf } from 'rimraf';\nimport { v4 as uuidV4 } from 'uuid';\nimport path from 'path';\nimport os from 'os';\nimport fs from 'fs/promises';\n\nconst commands = {};\n\n/**\n * Gets base64 screenshot for device\n * It is required that Simulator is in _booted_ state.\n *\n * @since Xcode SDK 8.1\n * @return {string} Base64-encoded Simulator screenshot.\n * @throws {Error} If the corresponding simctl subcommand command\n *                 returns non-zero return code.\n * @throws {Error} If the `udid` instance property is unset\n */\ncommands.getScreenshot = async function getScreenshot () {\n  const udid = this.requireUdid('io screenshot');\n  const pathToScreenshotPng = path.resolve(os.tmpdir(), `${uuidV4()}.png`);\n  try {\n    await this.exec('io', {\n      args: [udid, 'screenshot', pathToScreenshotPng],\n    });\n    return (await fs.readFile(pathToScreenshotPng)).toString('base64');\n  } finally {\n    await rimraf(pathToScreenshotPng);\n  }\n};\n\nexport default commands;\n"],"mappings":";;;;;;;;AAAA,IAAAA,OAAA,GAAAC,OAAA;AACA,IAAAC,KAAA,GAAAD,OAAA;AACA,IAAAE,KAAA,GAAAC,sBAAA,CAAAH,OAAA;AACA,IAAAI,GAAA,GAAAD,sBAAA,CAAAH,OAAA;AACA,IAAAK,SAAA,GAAAF,sBAAA,CAAAH,OAAA;AAEA,MAAMM,QAAQ,GAAG,CAAC,CAAC;AAYnBA,QAAQ,CAACC,aAAa,GAAG,eAAeA,aAAaA,CAAA,EAAI;EACvD,MAAMC,IAAI,GAAG,IAAI,CAACC,WAAW,CAAC,eAAe,CAAC;EAC9C,MAAMC,mBAAmB,GAAGC,aAAI,CAACC,OAAO,CAACC,WAAE,CAACC,MAAM,CAAC,CAAC,EAAG,GAAE,IAAAC,QAAM,EAAC,CAAE,MAAK,CAAC;EACxE,IAAI;IACF,MAAM,IAAI,CAACC,IAAI,CAAC,IAAI,EAAE;MACpBC,IAAI,EAAE,CAACT,IAAI,EAAE,YAAY,EAAEE,mBAAmB;IAChD,CAAC,CAAC;IACF,OAAO,CAAC,MAAMQ,iBAAE,CAACC,QAAQ,CAACT,mBAAmB,CAAC,EAAEU,QAAQ,CAAC,QAAQ,CAAC;EACpE,CAAC,SAAS;IACR,MAAM,IAAAC,cAAM,EAACX,mBAAmB,CAAC;EACnC;AACF,CAAC;AAAC,IAAAY,QAAA,GAEahB,QAAQ;AAAAiB,OAAA,CAAAC,OAAA,GAAAF,QAAA"}