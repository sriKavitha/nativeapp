declare namespace _default {
    /**
     * Returns location of the device under test.
     * The device under test must allow the location services for WDA
     * as 'Always' to get the location data correctly.
     *
     * The 'latitude', 'longitude' and 'altitude' could be zero even
     * if the Location Services are set to 'Always', because the device
     * needs some time to update the location data.
     *
     * @returns {Promise<LocationWithAltitude>}
     * @throws {Error} If the device under test returns an error message.
     *                 i.e.: tvOS returns unsupported error
     * @this {XCUITestDriver}
     */
    function getGeoLocation(this: import("../driver").default): Promise<{
        latitude: number;
        longitude: number;
        altitude: number;
    }>;
    /**
     * @param {Partial<import('@appium/types').Location>} location
     * @this {XCUITestDriver}
     */
    function setGeoLocation(this: import("../driver").default, location: Partial<import("@appium/types").Location>): Promise<void>;
    /**
     * Reset the location service on real device.
     * Raises not implemented error for simulator.
     * @throws {Error} If the device is simulator, or 'resetLocation' raises an error.
     * @this {XCUITestDriver}
     */
    function mobileResetLocationService(this: import("../driver").default): Promise<void>;
}
export default _default;
export type LocationWithAltitude = import('type-fest').SetRequired<import('@appium/types').Location, 'altitude'>;
export type XCUITestDriver = import('../driver').XCUITestDriver;
//# sourceMappingURL=location.d.ts.map