export default commands;
export type GeolocationInfo = {
    /**
     * Measurement of distance north or south of the Equator.
     */
    latitude: number;
    /**
     * Measurement of distance east or west of the prime meridian.
     */
    longitude: number;
};
export namespace commands {
    /**
     * @typedef {Object} GeolocationInfo
     * @property {number} latitude Measurement of distance north or south of the Equator.
     * @property {number} longitude Measurement of distance east or west of the prime meridian.
     */
    /**
     * Retrieves simulated geolocation value.
     * Only works since Xcode 14.3/iOS 16.4
     *
     * @returns {Promise<GeolocationInfo>} All entry values are set to null if no simulated location has
     * been set prior to calling this API.
     * @throws {Error} If the device under test does not support gelolocation simulation.
     */
    function mobileGetSimulatedLocation(): Promise<GeolocationInfo>;
    /**
     * Sets simulated geolocation value.
     * Only works since Xcode 14.3/iOS 16.4
     *
     * @param {GeolocationInfo} opts
     * @throws {Error} If the device under test does not support gelolocation simulation.
     */
    function mobileSetSimulatedLocation(opts: GeolocationInfo): Promise<any>;
    /**
     * Resets simulated geolocation value.
     * Only works since Xcode 14.3/iOS 16.4.
     * ! Do not forget to reset the simulated geolocation value after your automated test is finished.
     * ! If the value is not reset explcitly then the simulated one will remain until the next device restart.
     *
     * @throws {Error} If the device under test does not support gelolocation simulation.
     */
    function mobileResetSimulatedLocation(): Promise<any>;
}
//# sourceMappingURL=geolocation.d.ts.map