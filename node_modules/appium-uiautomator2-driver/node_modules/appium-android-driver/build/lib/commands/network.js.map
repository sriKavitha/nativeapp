{"version":3,"file":"network.js","names":["_lodash","_interopRequireDefault","require","_driver","_bluebird","commands","helpers","extensions","exports","AIRPLANE_MODE_MASK","WIFI_MASK","DATA_MASK","GEO_EPSILON","Number","MIN_VALUE","WIFI_KEY_NAME","DATA_KEY_NAME","AIRPLANE_MODE_KEY_NAME","getNetworkConnection","log","info","airplaneModeOn","adb","isAirplaneModeOn","connection","wifiOn","isWifiOn","dataOn","isDataOn","mobileSetConnectivity","opts","wifi","data","airplaneMode","_","every","isUndefined","errors","InvalidArgumentError","currentState","mobileGetConnectivity","services","setters","Boolean","push","setWifiState","isEmulator","setDataState","setAirplaneMode","getApiLevel","broadcastAirplaneMode","isEmpty","B","all","isArray","statePromises","resolve","includes","undefined","values","fromPairs","map","k","value","setNetworkConnection","type","shouldEnableAirplaneMode","shouldEnableWifi","shouldEnableDataConnection","isAirplaneModeEnabled","isWiFiEnabled","isDataEnabled","wrapBootstrapDisconnect","toggleData","setWifiAndData","toggleWiFi","toggleFlightMode","flightMode","setGeoLocation","location","getGeoLocation","e","warn","message","latitude","longitude","altitude","mobileRefreshGpsCache","timeoutMs","refreshGeoLocationCache","parseFloat","isLocationServicesEnabled","iLocationServicesEnabled","getLocationProviders","toggleLocationServices","isGpsEnabled","debug","toggleGPSLocationProvider","wrapped","bootstrap","ignoreUnexpectedShutdown","restart","start","appPackage","disableAndroidWatchers","acceptSslCerts","Object","assign","_default","default"],"sources":["../../../lib/commands/network.js"],"sourcesContent":["import _ from 'lodash';\nimport { errors } from 'appium/driver';\nimport B from 'bluebird';\n\nlet commands = {}, helpers = {}, extensions = {};\n\nconst AIRPLANE_MODE_MASK = 0b001;\nconst WIFI_MASK = 0b010;\nconst DATA_MASK = 0b100;\n// The value close to zero, but not zero, is needed\n// to trick JSON generation and send a float value instead of an integer,\n// This allows strictly-typed clients, like Java, to properly\n// parse it. Otherwise float 0.0 is always represented as integer 0 in JS.\n// The value must not be greater than DBL_EPSILON (https://opensource.apple.com/source/Libc/Libc-498/include/float.h)\nconst GEO_EPSILON = Number.MIN_VALUE;\nconst WIFI_KEY_NAME = 'wifi';\nconst DATA_KEY_NAME = 'data';\nconst AIRPLANE_MODE_KEY_NAME = 'airplaneMode';\n\ncommands.getNetworkConnection = async function getNetworkConnection () {\n  this.log.info('Getting network connection');\n  let airplaneModeOn = await this.adb.isAirplaneModeOn();\n  let connection = airplaneModeOn ? AIRPLANE_MODE_MASK : 0;\n\n  // no need to check anything else if we are in airplane mode\n  if (!airplaneModeOn) {\n    let wifiOn = await this.isWifiOn();\n    connection |= (wifiOn ? WIFI_MASK : 0);\n    let dataOn = await this.adb.isDataOn();\n    connection |= (dataOn ? DATA_MASK : 0);\n  }\n\n  return connection;\n};\n\n/**\n * decoupling to override the behaviour in other drivers like UiAutomator2.\n */\ncommands.isWifiOn = async function isWifiOn () {\n  return await this.adb.isWifiOn();\n};\n\n/**\n * @typedef {Object} SetConnectivityOptions\n * @property {boolean?} wifi Either to enable or disable Wi-Fi.\n * An unset value means to not change the state for the given service.\n * @property {boolean?} data Either to enable or disable mobile data connection.\n * An unset value means to not change the state for the given service.\n * @property {boolean?} airplaneMode Either to enable to disable the Airplane Mode\n * An unset value means to not change the state for the given service.\n */\n\n/**\n * Set the connectivity state for different services\n *\n * @param {SetConnectivityOptions} opts\n * @throws {Error} If none of known properties were provided or there was an error\n * while changing connectivity states\n */\ncommands.mobileSetConnectivity = async function mobileSetConnectivity (opts = {}) {\n  const {\n    wifi,\n    data,\n    airplaneMode,\n  } = opts;\n\n  if (_.every([wifi, data, airplaneMode], _.isUndefined)) {\n    throw new errors.InvalidArgumentError(\n      `Either one of ['${WIFI_KEY_NAME}', '${DATA_KEY_NAME}', '${AIRPLANE_MODE_KEY_NAME}'] options must be provided`\n    );\n  }\n\n  const currentState = await this.mobileGetConnectivity({\n    services: [\n      ...(_.isUndefined(wifi) ? [] : [WIFI_KEY_NAME]),\n      ...(_.isUndefined(data) ? [] : [DATA_KEY_NAME]),\n      ...(_.isUndefined(airplaneMode) ? [] : [AIRPLANE_MODE_KEY_NAME]),\n    ]\n  });\n  const setters = [];\n  if (!_.isUndefined(wifi) && currentState.wifi !== Boolean(wifi)) {\n    setters.push(this.adb.setWifiState(wifi, this.isEmulator()));\n  }\n  if (!_.isUndefined(data) && currentState.data !== Boolean(data)) {\n    setters.push(this.adb.setDataState(data, this.isEmulator()));\n  }\n  if (!_.isUndefined(airplaneMode) && currentState.airplaneMode !== Boolean(airplaneMode)) {\n    setters.push(async () => {\n      await this.adb.setAirplaneMode(airplaneMode);\n      if (this.adb.getApiLevel() < 30) {\n        await this.adb.broadcastAirplaneMode(airplaneMode);\n      }\n    });\n  }\n  if (!_.isEmpty(setters)) {\n    await B.all(setters);\n  }\n};\n\n/**\n * @typedef {Object} GetConnectivityResult\n * @property {boolean} wifi True if wifi is enabled\n * @property {boolean} data True if mobile data connection is enabled\n * @property {boolean} airplaneMode True if Airplane Mode is enabled\n */\n\n/**\n * @typedef {Object} GetConnectivityOptions\n * @property {string[]|string?} services one or more services to get the connectivity for.\n * Supported service names are: wifi, data, airplaneMode.\n */\n\n/**\n * Retrieves the connectivity properties from the device under test\n *\n * @param {GetConnectivityOptions?} opts If no service names are provided then the\n * connectivity state is returned for all of them.\n * @returns {GetConnectivityResult}\n */\ncommands.mobileGetConnectivity = async function mobileGetConnectivity (opts = {}) {\n  let {\n    services = [WIFI_KEY_NAME, DATA_KEY_NAME, AIRPLANE_MODE_KEY_NAME],\n  } = opts;\n  if (!_.isArray(services)) {\n    services = [services];\n  }\n\n  const statePromises = {\n    wifi: B.resolve(services.includes(WIFI_KEY_NAME) ? undefined : this.adb.isWifiOn()),\n    data: B.resolve(services.includes(DATA_KEY_NAME) ? undefined : this.adb.isDataOn()),\n    airplaneMode: B.resolve(\n      services.includes(AIRPLANE_MODE_KEY_NAME) ? undefined : this.adb.isAirplaneModeOn()\n    ),\n  };\n  await B.all(_.values(statePromises));\n  return _.fromPairs(services.map((k) => [k, statePromises[k].value()]));\n};\n\ncommands.setNetworkConnection = async function setNetworkConnection (type) {\n  this.log.info('Setting network connection');\n  // decode the input\n  const shouldEnableAirplaneMode = (type & AIRPLANE_MODE_MASK) !== 0;\n  const shouldEnableWifi = (type & WIFI_MASK) !== 0;\n  const shouldEnableDataConnection = (type & DATA_MASK) !== 0;\n\n  const currentState = await this.getNetworkConnection();\n  const isAirplaneModeEnabled = (currentState & AIRPLANE_MODE_MASK) !== 0;\n  const isWiFiEnabled = (currentState & WIFI_MASK) !== 0;\n  const isDataEnabled = (currentState & DATA_MASK) !== 0;\n\n  if (shouldEnableAirplaneMode !== isAirplaneModeEnabled) {\n    await this.wrapBootstrapDisconnect(async () => {\n      await this.adb.setAirplaneMode(shouldEnableAirplaneMode);\n    });\n    await this.wrapBootstrapDisconnect(async () => {\n      if (await this.adb.getApiLevel() < 30) {\n        await this.adb.broadcastAirplaneMode(shouldEnableAirplaneMode);\n      }\n    });\n  } else {\n    this.log.info(\n      `Not changing airplane mode, since it is already ${shouldEnableAirplaneMode ? 'enabled' : 'disabled'}`\n    );\n  }\n\n  if (shouldEnableWifi === isWiFiEnabled && shouldEnableDataConnection === isDataEnabled) {\n    this.log.info('Not changing data connection/Wi-Fi states, since they are already set to expected values');\n    if (await this.adb.isAirplaneModeOn()) {\n      return AIRPLANE_MODE_MASK | currentState;\n    }\n    return ~AIRPLANE_MODE_MASK & currentState;\n  }\n\n  await this.wrapBootstrapDisconnect(async () => {\n    if (shouldEnableWifi !== isWiFiEnabled) {\n      await this.setWifiState(shouldEnableWifi);\n    } else {\n      this.log.info(`Not changing Wi-Fi state, since it is already ` +\n        `${shouldEnableWifi ? 'enabled' : 'disabled'}`);\n    }\n\n    if (shouldEnableAirplaneMode) {\n      this.log.info('Not changing data connection state, because airplane mode is enabled');\n    } else if (shouldEnableDataConnection === isDataEnabled) {\n      this.log.info(`Not changing data connection state, since it is already ` +\n        `${shouldEnableDataConnection ? 'enabled' : 'disabled'}`);\n    } else {\n      await this.adb.setDataState(shouldEnableDataConnection, this.isEmulator());\n    }\n  });\n\n  return await this.getNetworkConnection();\n};\n\n/**\n * decoupling to override behaviour in other drivers like UiAutomator2.\n */\ncommands.setWifiState = async function setWifiState (wifi) {\n  await this.adb.setWifiState(wifi, this.isEmulator());\n};\n\ncommands.toggleData = async function toggleData () {\n  let data = !(await this.adb.isDataOn());\n  this.log.info(`Turning network data ${data ? 'on' : 'off'}`);\n  await this.wrapBootstrapDisconnect(async () => {\n    await this.adb.setWifiAndData({data}, this.isEmulator());\n  });\n};\n\ncommands.toggleWiFi = async function toggleWiFi () {\n  let wifi = !(await this.adb.isWifiOn());\n  this.log.info(`Turning WiFi ${wifi ? 'on' : 'off'}`);\n  await this.wrapBootstrapDisconnect(async () => {\n    await this.adb.setWifiAndData({wifi}, this.isEmulator());\n  });\n};\n\ncommands.toggleFlightMode = async function toggleFlightMode () {\n  /*\n   * TODO: Implement isRealDevice(). This method fails on\n   * real devices, it should throw a NotYetImplementedError\n   */\n  let flightMode = !(await this.adb.isAirplaneModeOn());\n  this.log.info(`Turning flight mode ${flightMode ? 'on' : 'off'}`);\n  await this.wrapBootstrapDisconnect(async () => {\n    await this.adb.setAirplaneMode(flightMode);\n  });\n  await this.wrapBootstrapDisconnect(async () => {\n    if (await this.adb.getApiLevel() < 30) {\n      await this.adb.broadcastAirplaneMode(flightMode);\n    }\n  });\n};\n\ncommands.setGeoLocation = async function setGeoLocation (location) {\n  await this.adb.setGeoLocation(location, this.isEmulator());\n  try {\n    return await this.getGeoLocation();\n  } catch (e) {\n    this.log.warn(`Could not get the current geolocation info: ${e.message}`);\n    this.log.warn(`Returning the default zero'ed values`);\n    return {\n      latitude: GEO_EPSILON,\n      longitude: GEO_EPSILON,\n      altitude: GEO_EPSILON,\n    };\n  }\n};\n\n/**\n * @typedef {Object} GpsCacheRefreshOptions\n * @property {number} timeoutMs [20000] The maximum number of milliseconds\n * to block until GPS cache is refreshed. Providing zero or a negative\n * value to it skips waiting completely.\n */\n\n/**\n * Sends an async request to refresh the GPS cache.\n * This feature only works if the device under test has\n * Google Play Services installed. In case the vanilla\n * LocationManager is used the device API level must be at\n * version 30 (Android R) or higher.\n *\n * @param {GpsCacheRefreshOptions} opts\n */\ncommands.mobileRefreshGpsCache = async function mobileRefreshGpsCache (opts = {}) {\n  const { timeoutMs } = opts;\n  await this.adb.refreshGeoLocationCache(timeoutMs);\n};\n\ncommands.getGeoLocation = async function getGeoLocation () {\n  const {latitude, longitude, altitude} = await this.adb.getGeoLocation();\n  return {\n    latitude: parseFloat(latitude) || GEO_EPSILON,\n    longitude: parseFloat(longitude) || GEO_EPSILON,\n    altitude: parseFloat(altitude) || GEO_EPSILON,\n  };\n};\n\n/**\n * Checks if GPS is enabled\n *\n * @returns {Promise<Boolean>} True if yes\n */\ncommands.isLocationServicesEnabled = async function iLocationServicesEnabled () {\n  return (await this.adb.getLocationProviders()).includes('gps');\n};\n\n/**\n * Toggles GPS state\n */\ncommands.toggleLocationServices = async function toggleLocationServices () {\n  this.log.info('Toggling location services');\n  const isGpsEnabled = await this.isLocationServicesEnabled();\n  this.log.debug(\n    `Current GPS state: ${isGpsEnabled}. ` +\n    `The service is going to be ${isGpsEnabled ? 'disabled' : 'enabled'}`\n  );\n  await this.adb.toggleGPSLocationProvider(!isGpsEnabled);\n};\n\nhelpers.wrapBootstrapDisconnect = async function wrapBootstrapDisconnect (wrapped) {\n  if (!this.bootstrap) {\n    return await wrapped();\n  }\n\n  this.bootstrap.ignoreUnexpectedShutdown = true;\n  try {\n    await wrapped();\n    await this.adb.restart();\n    await this.bootstrap.start(this.opts.appPackage, this.opts.disableAndroidWatchers, this.opts.acceptSslCerts);\n  } finally {\n    this.bootstrap.ignoreUnexpectedShutdown = false;\n  }\n};\n\nObject.assign(extensions, commands, helpers);\nexport { commands, helpers };\nexport default extensions;\n"],"mappings":"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"}